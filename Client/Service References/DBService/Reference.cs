//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientApplication.DBService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientDTO", Namespace="http://schemas.datacontract.org/2004/07/DBService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ClientDTO : ClientApplication.DBService.PersonDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LendingDTO> LendingsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInfo {
            get {
                return this.AdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInfoField, value) != true)) {
                    this.AdditionalInfoField = value;
                    this.RaisePropertyChanged("AdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LendingDTO> Lendings {
            get {
                return this.LendingsField;
            }
            set {
                if ((object.ReferenceEquals(this.LendingsField, value) != true)) {
                    this.LendingsField = value;
                    this.RaisePropertyChanged("Lendings");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonDTO", Namespace="http://schemas.datacontract.org/2004/07/DBService", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClientApplication.DBService.EmployeeDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClientApplication.DBService.ClientDTO))]
    public partial class PersonDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientApplication.DBService.AddressDTO AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientApplication.DBService.AddressDTO Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdNumber {
            get {
                return this.IdNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IdNumberField, value) != true)) {
                    this.IdNumberField = value;
                    this.RaisePropertyChanged("IdNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressDTO", Namespace="http://schemas.datacontract.org/2004/07/DBService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AddressDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApartmentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApartmentNumber {
            get {
                return this.ApartmentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ApartmentNumberField, value) != true)) {
                    this.ApartmentNumberField = value;
                    this.RaisePropertyChanged("ApartmentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseNumber {
            get {
                return this.HouseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseNumberField, value) != true)) {
                    this.HouseNumberField = value;
                    this.RaisePropertyChanged("HouseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeDTO", Namespace="http://schemas.datacontract.org/2004/07/DBService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class EmployeeDTO : ClientApplication.DBService.PersonDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LendingDTO> LendingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RemovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LentBookDTO> ReturnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LendingDTO> Lendings {
            get {
                return this.LendingsField;
            }
            set {
                if ((object.ReferenceEquals(this.LendingsField, value) != true)) {
                    this.LendingsField = value;
                    this.RaisePropertyChanged("Lendings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Removed {
            get {
                return this.RemovedField;
            }
            set {
                if ((this.RemovedField.Equals(value) != true)) {
                    this.RemovedField = value;
                    this.RaisePropertyChanged("Removed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LentBookDTO> Returns {
            get {
                return this.ReturnsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnsField, value) != true)) {
                    this.ReturnsField = value;
                    this.RaisePropertyChanged("Returns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LendingDTO", Namespace="http://schemas.datacontract.org/2004/07/DBService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class LendingDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LentBookDTO> BooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientApplication.DBService.ClientDTO ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LendingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientApplication.DBService.EmployeeDTO LendingEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LendingEmployeeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReturnDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LentBookDTO> Books {
            get {
                return this.BooksField;
            }
            set {
                if ((object.ReferenceEquals(this.BooksField, value) != true)) {
                    this.BooksField = value;
                    this.RaisePropertyChanged("Books");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientApplication.DBService.ClientDTO Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LendingDate {
            get {
                return this.LendingDateField;
            }
            set {
                if ((this.LendingDateField.Equals(value) != true)) {
                    this.LendingDateField = value;
                    this.RaisePropertyChanged("LendingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientApplication.DBService.EmployeeDTO LendingEmployee {
            get {
                return this.LendingEmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.LendingEmployeeField, value) != true)) {
                    this.LendingEmployeeField = value;
                    this.RaisePropertyChanged("LendingEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LendingEmployeeId {
            get {
                return this.LendingEmployeeIdField;
            }
            set {
                if ((this.LendingEmployeeIdField.Equals(value) != true)) {
                    this.LendingEmployeeIdField = value;
                    this.RaisePropertyChanged("LendingEmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReturnDate {
            get {
                return this.ReturnDateField;
            }
            set {
                if ((this.ReturnDateField.Equals(value) != true)) {
                    this.ReturnDateField = value;
                    this.RaisePropertyChanged("ReturnDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LentBookDTO", Namespace="http://schemas.datacontract.org/2004/07/DBService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class LentBookDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientApplication.DBService.BookDTO BookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientApplication.DBService.LendingDTO LendingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LendingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReturnDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientApplication.DBService.EmployeeDTO ReturnEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReturnEmployeeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientApplication.DBService.BookDTO Book {
            get {
                return this.BookField;
            }
            set {
                if ((object.ReferenceEquals(this.BookField, value) != true)) {
                    this.BookField = value;
                    this.RaisePropertyChanged("Book");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientApplication.DBService.LendingDTO Lending {
            get {
                return this.LendingField;
            }
            set {
                if ((object.ReferenceEquals(this.LendingField, value) != true)) {
                    this.LendingField = value;
                    this.RaisePropertyChanged("Lending");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LendingId {
            get {
                return this.LendingIdField;
            }
            set {
                if ((this.LendingIdField.Equals(value) != true)) {
                    this.LendingIdField = value;
                    this.RaisePropertyChanged("LendingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReturnDate {
            get {
                return this.ReturnDateField;
            }
            set {
                if ((this.ReturnDateField.Equals(value) != true)) {
                    this.ReturnDateField = value;
                    this.RaisePropertyChanged("ReturnDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientApplication.DBService.EmployeeDTO ReturnEmployee {
            get {
                return this.ReturnEmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnEmployeeField, value) != true)) {
                    this.ReturnEmployeeField = value;
                    this.RaisePropertyChanged("ReturnEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReturnEmployeeId {
            get {
                return this.ReturnEmployeeIdField;
            }
            set {
                if ((this.ReturnEmployeeIdField.Equals(value) != true)) {
                    this.ReturnEmployeeIdField = value;
                    this.RaisePropertyChanged("ReturnEmployeeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookDTO", Namespace="http://schemas.datacontract.org/2004/07/DBService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class BookDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.AuthorDTO> AuthorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.BookCategoryDTO> BookCategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HardCoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ISBNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PublishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientApplication.DBService.PublisherDTO PublisherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PublisherIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RemovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInfo {
            get {
                return this.AdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInfoField, value) != true)) {
                    this.AdditionalInfoField = value;
                    this.RaisePropertyChanged("AdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.AuthorDTO> Authors {
            get {
                return this.AuthorsField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorsField, value) != true)) {
                    this.AuthorsField = value;
                    this.RaisePropertyChanged("Authors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.BookCategoryDTO> BookCategories {
            get {
                return this.BookCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.BookCategoriesField, value) != true)) {
                    this.BookCategoriesField = value;
                    this.RaisePropertyChanged("BookCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HardCover {
            get {
                return this.HardCoverField;
            }
            set {
                if ((this.HardCoverField.Equals(value) != true)) {
                    this.HardCoverField = value;
                    this.RaisePropertyChanged("HardCover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISBN {
            get {
                return this.ISBNField;
            }
            set {
                if ((object.ReferenceEquals(this.ISBNField, value) != true)) {
                    this.ISBNField = value;
                    this.RaisePropertyChanged("ISBN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientApplication.DBService.PublisherDTO Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherField, value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PublisherId {
            get {
                return this.PublisherIdField;
            }
            set {
                if ((this.PublisherIdField.Equals(value) != true)) {
                    this.PublisherIdField = value;
                    this.RaisePropertyChanged("PublisherId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Removed {
            get {
                return this.RemovedField;
            }
            set {
                if ((this.RemovedField.Equals(value) != true)) {
                    this.RemovedField = value;
                    this.RaisePropertyChanged("Removed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PublisherDTO", Namespace="http://schemas.datacontract.org/2004/07/DBService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class PublisherDTO : ClientApplication.DBService.DictionaryDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorDTO", Namespace="http://schemas.datacontract.org/2004/07/DBService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AuthorDTO : ClientApplication.DBService.DictionaryDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookCategoryDTO", Namespace="http://schemas.datacontract.org/2004/07/DBService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class BookCategoryDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DictionaryDTO", Namespace="http://schemas.datacontract.org/2004/07/DBService", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClientApplication.DBService.PublisherDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClientApplication.DBService.AuthorDTO))]
    public partial class DictionaryDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
    [System.SerializableAttribute()]
    public partial class DBServiceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InnerMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionType {
            get {
                return this.ExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionTypeField, value) != true)) {
                    this.ExceptionTypeField = value;
                    this.RaisePropertyChanged("ExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InnerMessage {
            get {
                return this.InnerMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerMessageField, value) != true)) {
                    this.InnerMessageField = value;
                    this.RaisePropertyChanged("InnerMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DBService.IDatabaseService")]
    public interface IDatabaseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetAllClients", ReplyAction="http://tempuri.org/IDatabaseService/GetAllClientsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/GetAllClientsDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.ClientDTO> GetAllClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetAllClients", ReplyAction="http://tempuri.org/IDatabaseService/GetAllClientsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.ClientDTO>> GetAllClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetClient", ReplyAction="http://tempuri.org/IDatabaseService/GetClientResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/GetClientDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        ClientApplication.DBService.ClientDTO GetClient(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetClient", ReplyAction="http://tempuri.org/IDatabaseService/GetClientResponse")]
        System.Threading.Tasks.Task<ClientApplication.DBService.ClientDTO> GetClientAsync(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/DeleteClient", ReplyAction="http://tempuri.org/IDatabaseService/DeleteClientResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/DeleteClientDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        void DeleteClient(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/DeleteClient", ReplyAction="http://tempuri.org/IDatabaseService/DeleteClientResponse")]
        System.Threading.Tasks.Task DeleteClientAsync(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddClient", ReplyAction="http://tempuri.org/IDatabaseService/AddClientResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/AddClientDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        void AddClient(ClientApplication.DBService.ClientDTO client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddClient", ReplyAction="http://tempuri.org/IDatabaseService/AddClientResponse")]
        System.Threading.Tasks.Task AddClientAsync(ClientApplication.DBService.ClientDTO client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/EditClient", ReplyAction="http://tempuri.org/IDatabaseService/EditClientResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/EditClientDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        void EditClient(ClientApplication.DBService.ClientDTO client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/EditClient", ReplyAction="http://tempuri.org/IDatabaseService/EditClientResponse")]
        System.Threading.Tasks.Task EditClientAsync(ClientApplication.DBService.ClientDTO client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetEmployeeRole", ReplyAction="http://tempuri.org/IDatabaseService/GetEmployeeRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/GetEmployeeRoleDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        byte GetEmployeeRole(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetEmployeeRole", ReplyAction="http://tempuri.org/IDatabaseService/GetEmployeeRoleResponse")]
        System.Threading.Tasks.Task<byte> GetEmployeeRoleAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetAllEmployees", ReplyAction="http://tempuri.org/IDatabaseService/GetAllEmployeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/GetAllEmployeesDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.EmployeeDTO> GetAllEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetAllEmployees", ReplyAction="http://tempuri.org/IDatabaseService/GetAllEmployeesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.EmployeeDTO>> GetAllEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetEmployee", ReplyAction="http://tempuri.org/IDatabaseService/GetEmployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/GetEmployeeDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        ClientApplication.DBService.EmployeeDTO GetEmployee(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetEmployee", ReplyAction="http://tempuri.org/IDatabaseService/GetEmployeeResponse")]
        System.Threading.Tasks.Task<ClientApplication.DBService.EmployeeDTO> GetEmployeeAsync(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddEmployee", ReplyAction="http://tempuri.org/IDatabaseService/AddEmployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/AddEmployeeDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        void AddEmployee(ClientApplication.DBService.EmployeeDTO employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddEmployee", ReplyAction="http://tempuri.org/IDatabaseService/AddEmployeeResponse")]
        System.Threading.Tasks.Task AddEmployeeAsync(ClientApplication.DBService.EmployeeDTO employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/EditEmployee", ReplyAction="http://tempuri.org/IDatabaseService/EditEmployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/EditEmployeeDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        void EditEmployee(ClientApplication.DBService.EmployeeDTO employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/EditEmployee", ReplyAction="http://tempuri.org/IDatabaseService/EditEmployeeResponse")]
        System.Threading.Tasks.Task EditEmployeeAsync(ClientApplication.DBService.EmployeeDTO employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/DeleteEmployee", ReplyAction="http://tempuri.org/IDatabaseService/DeleteEmployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/DeleteEmployeeDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        void DeleteEmployee(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/DeleteEmployee", ReplyAction="http://tempuri.org/IDatabaseService/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task DeleteEmployeeAsync(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetLendingsOf", ReplyAction="http://tempuri.org/IDatabaseService/GetLendingsOfResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/GetLendingsOfDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LendingDTO> GetLendingsOf(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetLendingsOf", ReplyAction="http://tempuri.org/IDatabaseService/GetLendingsOfResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LendingDTO>> GetLendingsOfAsync(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetLentBooksOf", ReplyAction="http://tempuri.org/IDatabaseService/GetLentBooksOfResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/GetLentBooksOfDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LentBookDTO> GetLentBooksOf(int lendingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetLentBooksOf", ReplyAction="http://tempuri.org/IDatabaseService/GetLentBooksOfResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LentBookDTO>> GetLentBooksOfAsync(int lendingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/ReturnAllBooks", ReplyAction="http://tempuri.org/IDatabaseService/ReturnAllBooksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/ReturnAllBooksDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        void ReturnAllBooks(int lendingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/ReturnAllBooks", ReplyAction="http://tempuri.org/IDatabaseService/ReturnAllBooksResponse")]
        System.Threading.Tasks.Task ReturnAllBooksAsync(int lendingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/ReturnBooks", ReplyAction="http://tempuri.org/IDatabaseService/ReturnBooksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/ReturnBooksDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        void ReturnBooks(System.Collections.Generic.Dictionary<int, bool> bookIds, int lendingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/ReturnBooks", ReplyAction="http://tempuri.org/IDatabaseService/ReturnBooksResponse")]
        System.Threading.Tasks.Task ReturnBooksAsync(System.Collections.Generic.Dictionary<int, bool> bookIds, int lendingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddLending", ReplyAction="http://tempuri.org/IDatabaseService/AddLendingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/AddLendingDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        void AddLending(ClientApplication.DBService.LendingDTO lending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddLending", ReplyAction="http://tempuri.org/IDatabaseService/AddLendingResponse")]
        System.Threading.Tasks.Task AddLendingAsync(ClientApplication.DBService.LendingDTO lending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/EditLending", ReplyAction="http://tempuri.org/IDatabaseService/EditLendingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/EditLendingDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        void EditLending(ClientApplication.DBService.LendingDTO lending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/EditLending", ReplyAction="http://tempuri.org/IDatabaseService/EditLendingResponse")]
        System.Threading.Tasks.Task EditLendingAsync(ClientApplication.DBService.LendingDTO lending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/DeleteLending", ReplyAction="http://tempuri.org/IDatabaseService/DeleteLendingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/DeleteLendingDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        void DeleteLending(int clientId, int lendingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/DeleteLending", ReplyAction="http://tempuri.org/IDatabaseService/DeleteLendingResponse")]
        System.Threading.Tasks.Task DeleteLendingAsync(int clientId, int lendingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetAllBooks", ReplyAction="http://tempuri.org/IDatabaseService/GetAllBooksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/GetAllBooksDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.BookDTO> GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetAllBooks", ReplyAction="http://tempuri.org/IDatabaseService/GetAllBooksResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.BookDTO>> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetBook", ReplyAction="http://tempuri.org/IDatabaseService/GetBookResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/GetBookDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        ClientApplication.DBService.BookDTO GetBook(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetBook", ReplyAction="http://tempuri.org/IDatabaseService/GetBookResponse")]
        System.Threading.Tasks.Task<ClientApplication.DBService.BookDTO> GetBookAsync(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddBook", ReplyAction="http://tempuri.org/IDatabaseService/AddBookResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/AddBookDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        void AddBook(ClientApplication.DBService.BookDTO book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddBook", ReplyAction="http://tempuri.org/IDatabaseService/AddBookResponse")]
        System.Threading.Tasks.Task AddBookAsync(ClientApplication.DBService.BookDTO book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/EditBook", ReplyAction="http://tempuri.org/IDatabaseService/EditBookResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/EditBookDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        void EditBook(ClientApplication.DBService.BookDTO book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/EditBook", ReplyAction="http://tempuri.org/IDatabaseService/EditBookResponse")]
        System.Threading.Tasks.Task EditBookAsync(ClientApplication.DBService.BookDTO book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/DeleteBook", ReplyAction="http://tempuri.org/IDatabaseService/DeleteBookResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/DeleteBookDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        void DeleteBook(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/DeleteBook", ReplyAction="http://tempuri.org/IDatabaseService/DeleteBookResponse")]
        System.Threading.Tasks.Task DeleteBookAsync(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetAllBookCategories", ReplyAction="http://tempuri.org/IDatabaseService/GetAllBookCategoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/GetAllBookCategoriesDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.BookCategoryDTO> GetAllBookCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetAllBookCategories", ReplyAction="http://tempuri.org/IDatabaseService/GetAllBookCategoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.BookCategoryDTO>> GetAllBookCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetAllAuthors", ReplyAction="http://tempuri.org/IDatabaseService/GetAllAuthorsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/GetAllAuthorsDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.AuthorDTO> GetAllAuthors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetAllAuthors", ReplyAction="http://tempuri.org/IDatabaseService/GetAllAuthorsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.AuthorDTO>> GetAllAuthorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetAllPublishers", ReplyAction="http://tempuri.org/IDatabaseService/GetAllPublishersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/GetAllPublishersDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.PublisherDTO> GetAllPublishers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetAllPublishers", ReplyAction="http://tempuri.org/IDatabaseService/GetAllPublishersResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.PublisherDTO>> GetAllPublishersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddPublisher", ReplyAction="http://tempuri.org/IDatabaseService/AddPublisherResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/AddPublisherDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        int AddPublisher(ClientApplication.DBService.PublisherDTO publisher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddPublisher", ReplyAction="http://tempuri.org/IDatabaseService/AddPublisherResponse")]
        System.Threading.Tasks.Task<int> AddPublisherAsync(ClientApplication.DBService.PublisherDTO publisher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddAuthor", ReplyAction="http://tempuri.org/IDatabaseService/AddAuthorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/AddAuthorDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        int AddAuthor(ClientApplication.DBService.AuthorDTO author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddAuthor", ReplyAction="http://tempuri.org/IDatabaseService/AddAuthorResponse")]
        System.Threading.Tasks.Task<int> AddAuthorAsync(ClientApplication.DBService.AuthorDTO author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddBookCategory", ReplyAction="http://tempuri.org/IDatabaseService/AddBookCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClientApplication.DBService.DBServiceFault), Action="http://tempuri.org/IDatabaseService/AddBookCategoryDBServiceFaultFault", Name="DBServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DBService")]
        int AddBookCategory(ClientApplication.DBService.BookCategoryDTO bookCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddBookCategory", ReplyAction="http://tempuri.org/IDatabaseService/AddBookCategoryResponse")]
        System.Threading.Tasks.Task<int> AddBookCategoryAsync(ClientApplication.DBService.BookCategoryDTO bookCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/TestAuthorization", ReplyAction="http://tempuri.org/IDatabaseService/TestAuthorizationResponse")]
        void TestAuthorization();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/TestAuthorization", ReplyAction="http://tempuri.org/IDatabaseService/TestAuthorizationResponse")]
        System.Threading.Tasks.Task TestAuthorizationAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDatabaseServiceChannel : ClientApplication.DBService.IDatabaseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatabaseServiceClient : System.ServiceModel.ClientBase<ClientApplication.DBService.IDatabaseService>, ClientApplication.DBService.IDatabaseService {
        
        public DatabaseServiceClient() {
        }
        
        public DatabaseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatabaseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.ClientDTO> GetAllClients() {
            return base.Channel.GetAllClients();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.ClientDTO>> GetAllClientsAsync() {
            return base.Channel.GetAllClientsAsync();
        }
        
        public ClientApplication.DBService.ClientDTO GetClient(int clientId) {
            return base.Channel.GetClient(clientId);
        }
        
        public System.Threading.Tasks.Task<ClientApplication.DBService.ClientDTO> GetClientAsync(int clientId) {
            return base.Channel.GetClientAsync(clientId);
        }
        
        public void DeleteClient(int clientId) {
            base.Channel.DeleteClient(clientId);
        }
        
        public System.Threading.Tasks.Task DeleteClientAsync(int clientId) {
            return base.Channel.DeleteClientAsync(clientId);
        }
        
        public void AddClient(ClientApplication.DBService.ClientDTO client) {
            base.Channel.AddClient(client);
        }
        
        public System.Threading.Tasks.Task AddClientAsync(ClientApplication.DBService.ClientDTO client) {
            return base.Channel.AddClientAsync(client);
        }
        
        public void EditClient(ClientApplication.DBService.ClientDTO client) {
            base.Channel.EditClient(client);
        }
        
        public System.Threading.Tasks.Task EditClientAsync(ClientApplication.DBService.ClientDTO client) {
            return base.Channel.EditClientAsync(client);
        }
        
        public byte GetEmployeeRole(string username) {
            return base.Channel.GetEmployeeRole(username);
        }
        
        public System.Threading.Tasks.Task<byte> GetEmployeeRoleAsync(string username) {
            return base.Channel.GetEmployeeRoleAsync(username);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.EmployeeDTO> GetAllEmployees() {
            return base.Channel.GetAllEmployees();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.EmployeeDTO>> GetAllEmployeesAsync() {
            return base.Channel.GetAllEmployeesAsync();
        }
        
        public ClientApplication.DBService.EmployeeDTO GetEmployee(int employeeId) {
            return base.Channel.GetEmployee(employeeId);
        }
        
        public System.Threading.Tasks.Task<ClientApplication.DBService.EmployeeDTO> GetEmployeeAsync(int employeeId) {
            return base.Channel.GetEmployeeAsync(employeeId);
        }
        
        public void AddEmployee(ClientApplication.DBService.EmployeeDTO employee) {
            base.Channel.AddEmployee(employee);
        }
        
        public System.Threading.Tasks.Task AddEmployeeAsync(ClientApplication.DBService.EmployeeDTO employee) {
            return base.Channel.AddEmployeeAsync(employee);
        }
        
        public void EditEmployee(ClientApplication.DBService.EmployeeDTO employee) {
            base.Channel.EditEmployee(employee);
        }
        
        public System.Threading.Tasks.Task EditEmployeeAsync(ClientApplication.DBService.EmployeeDTO employee) {
            return base.Channel.EditEmployeeAsync(employee);
        }
        
        public void DeleteEmployee(int employeeId) {
            base.Channel.DeleteEmployee(employeeId);
        }
        
        public System.Threading.Tasks.Task DeleteEmployeeAsync(int employeeId) {
            return base.Channel.DeleteEmployeeAsync(employeeId);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LendingDTO> GetLendingsOf(int clientId) {
            return base.Channel.GetLendingsOf(clientId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LendingDTO>> GetLendingsOfAsync(int clientId) {
            return base.Channel.GetLendingsOfAsync(clientId);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LentBookDTO> GetLentBooksOf(int lendingId) {
            return base.Channel.GetLentBooksOf(lendingId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.LentBookDTO>> GetLentBooksOfAsync(int lendingId) {
            return base.Channel.GetLentBooksOfAsync(lendingId);
        }
        
        public void ReturnAllBooks(int lendingId) {
            base.Channel.ReturnAllBooks(lendingId);
        }
        
        public System.Threading.Tasks.Task ReturnAllBooksAsync(int lendingId) {
            return base.Channel.ReturnAllBooksAsync(lendingId);
        }
        
        public void ReturnBooks(System.Collections.Generic.Dictionary<int, bool> bookIds, int lendingId) {
            base.Channel.ReturnBooks(bookIds, lendingId);
        }
        
        public System.Threading.Tasks.Task ReturnBooksAsync(System.Collections.Generic.Dictionary<int, bool> bookIds, int lendingId) {
            return base.Channel.ReturnBooksAsync(bookIds, lendingId);
        }
        
        public void AddLending(ClientApplication.DBService.LendingDTO lending) {
            base.Channel.AddLending(lending);
        }
        
        public System.Threading.Tasks.Task AddLendingAsync(ClientApplication.DBService.LendingDTO lending) {
            return base.Channel.AddLendingAsync(lending);
        }
        
        public void EditLending(ClientApplication.DBService.LendingDTO lending) {
            base.Channel.EditLending(lending);
        }
        
        public System.Threading.Tasks.Task EditLendingAsync(ClientApplication.DBService.LendingDTO lending) {
            return base.Channel.EditLendingAsync(lending);
        }
        
        public void DeleteLending(int clientId, int lendingId) {
            base.Channel.DeleteLending(clientId, lendingId);
        }
        
        public System.Threading.Tasks.Task DeleteLendingAsync(int clientId, int lendingId) {
            return base.Channel.DeleteLendingAsync(clientId, lendingId);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.BookDTO> GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.BookDTO>> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public ClientApplication.DBService.BookDTO GetBook(int bookId) {
            return base.Channel.GetBook(bookId);
        }
        
        public System.Threading.Tasks.Task<ClientApplication.DBService.BookDTO> GetBookAsync(int bookId) {
            return base.Channel.GetBookAsync(bookId);
        }
        
        public void AddBook(ClientApplication.DBService.BookDTO book) {
            base.Channel.AddBook(book);
        }
        
        public System.Threading.Tasks.Task AddBookAsync(ClientApplication.DBService.BookDTO book) {
            return base.Channel.AddBookAsync(book);
        }
        
        public void EditBook(ClientApplication.DBService.BookDTO book) {
            base.Channel.EditBook(book);
        }
        
        public System.Threading.Tasks.Task EditBookAsync(ClientApplication.DBService.BookDTO book) {
            return base.Channel.EditBookAsync(book);
        }
        
        public void DeleteBook(int bookId) {
            base.Channel.DeleteBook(bookId);
        }
        
        public System.Threading.Tasks.Task DeleteBookAsync(int bookId) {
            return base.Channel.DeleteBookAsync(bookId);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.BookCategoryDTO> GetAllBookCategories() {
            return base.Channel.GetAllBookCategories();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.BookCategoryDTO>> GetAllBookCategoriesAsync() {
            return base.Channel.GetAllBookCategoriesAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.AuthorDTO> GetAllAuthors() {
            return base.Channel.GetAllAuthors();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.AuthorDTO>> GetAllAuthorsAsync() {
            return base.Channel.GetAllAuthorsAsync();
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.PublisherDTO> GetAllPublishers() {
            return base.Channel.GetAllPublishers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<ClientApplication.DBService.PublisherDTO>> GetAllPublishersAsync() {
            return base.Channel.GetAllPublishersAsync();
        }
        
        public int AddPublisher(ClientApplication.DBService.PublisherDTO publisher) {
            return base.Channel.AddPublisher(publisher);
        }
        
        public System.Threading.Tasks.Task<int> AddPublisherAsync(ClientApplication.DBService.PublisherDTO publisher) {
            return base.Channel.AddPublisherAsync(publisher);
        }
        
        public int AddAuthor(ClientApplication.DBService.AuthorDTO author) {
            return base.Channel.AddAuthor(author);
        }
        
        public System.Threading.Tasks.Task<int> AddAuthorAsync(ClientApplication.DBService.AuthorDTO author) {
            return base.Channel.AddAuthorAsync(author);
        }
        
        public int AddBookCategory(ClientApplication.DBService.BookCategoryDTO bookCategory) {
            return base.Channel.AddBookCategory(bookCategory);
        }
        
        public System.Threading.Tasks.Task<int> AddBookCategoryAsync(ClientApplication.DBService.BookCategoryDTO bookCategory) {
            return base.Channel.AddBookCategoryAsync(bookCategory);
        }
        
        public void TestAuthorization() {
            base.Channel.TestAuthorization();
        }
        
        public System.Threading.Tasks.Task TestAuthorizationAsync() {
            return base.Channel.TestAuthorizationAsync();
        }
    }
}
